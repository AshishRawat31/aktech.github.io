<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Amit Kumar</title>
 <link href="http://blog.iamit.in/atom.xml" rel="self"/>
 <link href="http://blog.iamit.in/"/>
 <updated>2015-06-07T11:28:00+00:00</updated>
 <id>http://blog.iamit.in</id>
 <author>
   <name>Amit Kumar</name>
   <email>dtu.amit@gmail.com</email>
 </author>

 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;2</title>
   <link href="http://blog.iamit.in/GSoC-week-2"/>
   <updated>2015-06-07T00:00:00+00:00</updated>
   <id>http://blog.iamit.in/GSoC &#58; This week in SymPy &#35;2 </id>
   <content type="html">&lt;p&gt;Hi there! It&amp;#39;s been two weeks into GSoC, &amp;amp; I have managed to flip some bits.&lt;/p&gt;

&lt;p&gt;This week, I started working on &lt;code&gt;ComplexPlane&lt;/code&gt; Class, &amp;amp; also worked on improving &lt;code&gt;linsolve&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Progress of Week 2&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gsoc/pr.png&quot;&gt; &lt;/p&gt;

&lt;p&gt;The major portion of this week went into improving &lt;code&gt;linsolve&lt;/code&gt; function, which I wrote last week, 
PR : &lt;strong&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;#9438&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.github.com/moorepants&quot;&gt;Jason&lt;/a&gt; suggested to let the Matrix code be the core source for all linear solve operations (i.e. remove all algorithmic solve code from everywhere else in sympy). Then for any linear solve stuff that can&amp;#39;t be handled by the Matrix code base, implement that here in &lt;code&gt;linsolve&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It was indeed a good idea, since solving linear system is more of Matrix stuff than that of solvers in CAS, So we introduced a new solver in &lt;code&gt;matrices.py&lt;/code&gt; named as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gauss_jordan_solve()&lt;/code&gt; : It solves &lt;code&gt;Ax = b&lt;/code&gt; using Gauss Jordan elimination.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There may be zero, one, or infinite solutions.  If one solution
exists, it will be returned. If infinite solutions exist, it will
be returned parametrically in terms of Dummy parameters. If no solutions exist, It will throw
ValueError.&lt;/p&gt;

&lt;p&gt;Now &lt;code&gt;linsolve&lt;/code&gt; is a light wrapper around &lt;code&gt;gauss_jordan_solve()&lt;/code&gt; method, it basically converts all the input types into the standard A &amp;amp; b form &amp;amp; calls A.gauss&lt;em&gt;jordan&lt;/em&gt;solve() and replaces the dummy parameters with the symbols input by the user.&lt;/p&gt;

&lt;h3&gt;Plan for Week 3:&lt;/h3&gt;

&lt;p&gt;This week I plan to complete ComplexPlane class &amp;amp; get the following PR&amp;#39;s Merged:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;PR #9438&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9463&quot;&gt;PR #9463&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;#39;s all for now, looking forward for week #3.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; This week in SymPy &#35;1</title>
   <link href="http://blog.iamit.in/GSoC-week-1"/>
   <updated>2015-06-01T00:00:00+00:00</updated>
   <id>http://blog.iamit.in/GSoC &#58; This week in SymPy &#35;1</id>
   <content type="html">&lt;p&gt;Hi there! The First week of the coding period has came to an end, this week has been very hectic for me due to my practicals and Minor project submission at college, though I mananged to reach the goal for this week.&lt;/p&gt;

&lt;p&gt;This week, I worked on Linear system solver &lt;code&gt;linsolve&lt;/code&gt; in the &lt;code&gt;solveset&lt;/code&gt; Module, as I mentioned in my last &lt;a href=&quot;http://blog.iamit.in/GSoC-Getting-Up-For-the-Coding-Period/&quot;&gt;post&lt;/a&gt;, about my goals for Week 1. &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Progress of Week 1&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/gsoc/pr.png&quot;&gt; I implemented the following two functions: &lt;/br&gt;
PR : &lt;strong&gt;&lt;a href=&quot;https://github.com/sympy/sympy/pull/9438&quot;&gt;#9438&lt;/a&gt;&lt;/strong&gt;.
It&amp;#39;s almost good to merge after a final review by &lt;a href=&quot;http://www.github.com/flacjacket&quot;&gt;flacjacket&lt;/a&gt; &amp;amp; &lt;a href=&quot;http://www.github.com/hargup&quot;&gt;hargup&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;linear_eq_to_matrix&lt;/code&gt;&lt;/strong&gt; : &lt;em&gt;method to convert system of linear Equations to Matrix Form.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;linsolve&lt;/code&gt;&lt;/strong&gt;: &lt;em&gt;It&amp;#39;s the General Linear System solver.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;http://www.github.com/moorepants&quot;&gt;Jason&lt;/a&gt; for reviewing my initial implementation &amp;amp; suggesting useful changes.&lt;/p&gt;

&lt;h3&gt;Algorithm Used&lt;/h3&gt;

&lt;p&gt;The algorithm used in &lt;code&gt;linsolve&lt;/code&gt; is Gauss-Jordan elimination, which results, after elimination, in an reduced row echelon form matrix. (used &lt;code&gt;rref()&lt;/code&gt; method of matrices)&lt;/p&gt;

&lt;h3&gt;Capabilities of Linsolve&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;linsolve&lt;/code&gt; is a powerful linear system solver, It can solve all types of linear systems, accepted in all input forms, hence providing a user friendly Public API. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;under-determined&lt;/em&gt;&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linsolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]:{(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;well-behaved&lt;/em&gt;&lt;/strong&gt;: &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Eqns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linsolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Eqns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]:{(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;over-determined&lt;/em&gt;&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Parametrized solution&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linsolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]:{(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# No solution&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linsolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;....&lt;/span&gt;
&lt;span class=&quot;ne&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;The input formats supported:&lt;/br&gt;&lt;/h3&gt;

&lt;p&gt;(as mentioned in my last &lt;a href=&quot;http://blog.iamit.in/GSoC-Getting-Up-For-the-Coding-Period/&quot;&gt;post&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Augmented Matrix Form&lt;/li&gt;
&lt;li&gt;List Of Equations Form&lt;/li&gt;
&lt;li&gt;Input A &amp;amp; b Matrix Form (from &lt;code&gt;Ax = b&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Plan for Week 2:&lt;/h3&gt;

&lt;p&gt;This week I plan to work on Complex Sets.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s all for now, looking forward for week #2.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GSoC &#58; Getting Up For the Coding Period</title>
   <link href="http://blog.iamit.in/GSoC-Getting-Up-For-the-Coding-Period"/>
   <updated>2015-05-24T00:00:00+00:00</updated>
   <id>http://blog.iamit.in/GSoC &#58; Getting-Up-For-the-Coding-Period </id>
   <content type="html">&lt;h3&gt;&lt;strong&gt;The Start of Coding Period!&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The Community bonding Period is close to end now &amp;amp; my Exams as well. Tomorrow starts the Coding Period &amp;amp; I have been waiting for it for some time now. &lt;/p&gt;

&lt;p&gt;Recently I gave a quick look to my Proposed Timeline in my &lt;a href=&quot;https://github.com/sympy/sympy/wiki/GSoC-2015-Application-AMiT-Kumar--Solvers-:-Extending-Solveset#timeline&quot;&gt;Proposal&lt;/a&gt;, &amp;amp;  decided to swap the 2nd Week&amp;#39;s work with Ist, this will help me securing few credits in my College&amp;#39;s Minor Project Submission (Which has the deadline of 30th May).&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Plan for Week 1&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This week, I am planning to work on Solving Linear systems in &lt;code&gt;solveset&lt;/code&gt;. (Currently solveset support univariate solvers only).&lt;/p&gt;

&lt;p&gt;The main functions, I would be implementing are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;eq_to_matrix&lt;/code&gt; :
&lt;em&gt;method to convert system of Equations to Matrix Form.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;linsolve&lt;/code&gt;: &lt;em&gt;It&amp;#39;s the General Linear System solver.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As mentioned in the proposal, Solving system of linear equations is an important feature of solvers in a CAS. Most of the CAS have a convenient single function to solve linear systems, for example &lt;code&gt;LinearSolve&lt;/code&gt; in Mathematica.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;&lt;code&gt;linsolve&lt;/code&gt;&lt;/strong&gt; which I would be implementing is inspired from Matlab &amp;amp; Maxima.&lt;/p&gt;

&lt;h5&gt;&lt;strong&gt;Features Overview&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;We have a lot of reusable code in &lt;code&gt;sympy.matrices&lt;/code&gt;  &amp;amp; &lt;code&gt;sympy.solvers.solvers&lt;/code&gt;, which would be quite useful.
One of the most important thing I would like to have in &lt;code&gt;linsolve&lt;/code&gt; is supporting a lot of input formats.
Though, most of the CAS suport only one input format. This feature would be quite useful for sympy&amp;#39;s &lt;code&gt;linsolve&lt;/code&gt;.&lt;/p&gt;

&lt;h6&gt;The three most common input formats, I can recall as of now are:&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Augmented Matrix Form&lt;/li&gt;
&lt;li&gt;List Of Equations Form&lt;/li&gt;
&lt;li&gt;Input A &amp;amp; b Matrix Form (from &lt;code&gt;Ax = b&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It would be great to have all three input formats supported in the Public API &lt;code&gt;linsolve&lt;/code&gt; Method.&lt;/p&gt;

&lt;p&gt;Looking forward for Coding Period, that&amp;#39;s all for now.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Summer Of Code with SymPy</title>
   <link href="http://blog.iamit.in/Google-Summer-Of-Code-with-SymPy"/>
   <updated>2015-04-28T00:00:00+00:00</updated>
   <id>http://blog.iamit.in/Google-Summer-Of-Code-with-SymPy</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/gsoc/GSOC2015.png&quot; alt=&quot;GSoC 2015&quot;&gt;&lt;/p&gt;

&lt;p&gt;Yay! the much awaited results of &lt;a href=&quot;http://www.google-melange.com/gsoc/projects/list/google/gsoc2015&quot;&gt;Google Summer Of Code&lt;/a&gt; is out now, and I have been selected to work with &lt;a href=&quot;http://www.sympy.org/&quot;&gt;SymPy&lt;/a&gt; under &lt;a href=&quot;https://www.python.org/psf/&quot;&gt;Python Software Foundation.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;For those who don&amp;#39;t know about GSoC&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Google_Summer_of_Code&quot;&gt;Google Summer of Code&lt;/a&gt;&lt;/strong&gt; is a global program that offers students stipends to write code for open source projects.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;A bit about SymPy&lt;/h3&gt;

&lt;p&gt;&lt;img style=&quot;float: right&quot; src=&quot;/assets/gsoc/sympy.png&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SymPy is a Python library for symbolic mathematics. It aims to become a full-featured &lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Computer_algebra_system&quot;&gt;Computer Algebra System&lt;/a&gt;&lt;/strong&gt; (CAS) while keeping the code as simple as possible in order to be comprehensible and easily extensible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;About My Project&lt;/h3&gt;

&lt;p&gt;My Project is being mentored by some really awesome guys &lt;a href=&quot;https://github.com/certik&quot;&gt;Ondřej Čertík&lt;/a&gt;, &lt;a href=&quot;https://github.com/flacjacket&quot;&gt;Sean Vig&lt;/a&gt; and &lt;a href=&quot;https://github.com/hargup&quot;&gt;Harsh Gupta&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Project aims at improving the current Equation solvers in SymPy. The Current solve is a huge mess, It needs to be broken into various sub-hints, to make the code more robust, modular, and approachable for developers, moving in lines of the new API, as developed in solveset. Currently the new API is implemented for univariate Equations only, we need to incorporate it for linear systems, multivariate equations &amp;amp; transcendental by rewriting the solvers for these in the new solveset Module.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sympy/sympy/wiki/GSoC-2015-Application-AMiT-Kumar--Solvers-:-Extending-Solveset&quot;&gt;Here is my Proposal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Looking forward for a great summer with SymPy!&lt;/p&gt;
</content>
 </entry>
 

</feed>